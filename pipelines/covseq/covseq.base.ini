[DEFAULT]
# Cluster
cluster_server=abacus.genome.mcgill.ca
sequencing_center = McGill Genome Centre
cluster_submit_cmd_suffix= | grep "[0-9]"
cluster_walltime= 24:00:0
cluster_other_arg=-m ae -M $JOB_MAIL -W umask=0002
cluster_work_dir_arg=-d
cluster_output_dir_arg=-j oe -o
cluster_job_name_arg=-N
cluster_cmd_produces_job_id=true
cluster_dependency_arg=afterok
cluster_dependency_sep=:
cluster_max_jobs=30000
tmp_dir=${TMPDIR:=/tmp}
portal_output_dir=$PORTAL_OUTPUT_DIR

ALL_CPU=32
HALF_CPU=16
QUART_CPU=8
PINT_CPU=4

ALL_MEM=187G
HALF_MEM=90G
QUART_MEM=60G
PINT_MEM=30G
cluster_mem = 5000M per cpu
cluster_queue=-q sw
LARGE_QUEUE = -q lm
cluster_cpu=-l nodes=1:ppn=1

# Modules
module_bedtools=mugqic/bedtools/2.29.2
module_bcftools=mugqic/bcftools/1.12
module_bvatools=mugqic/bvatools/1.6
module_bwa=mugqic/bwa/0.7.17
module_CoVSeQ_tools=mugqic/CoVSeQ_tools/1.1.1
module_cutadapt=mugqic/cutadapt/2.10
module_fgbio=mugqic/fgbio/1.1.0
module_freebayes=mugqic/freebayes/1.3.4
module_gatk=mugqic/GenomeAnalysisTK/4.1.2.0
module_htslib=mugqic/htslib/1.11
module_igvtools=mugqic/igvtools/2.3.67
module_ivar=mugqic/ivar/1.3
module_java=mugqic/java/openjdk-jdk1.8.0_72
module_kraken2=mugqic/kraken2/2.1.0
module_mugqic_tools=mugqic/mugqic_tools/2.8.1
# module_multiqc=mugqic/MultiQC/1.8
module_ncovtools=mugqic/ncov-tools/1.8
module_ncov_random_scripts=mugqic/ncov-random-scripts/20210415
module_perl=mugqic/perl/5.22.1
module_picard=mugqic/picard/2.9.0
module_pigz=mugqic/pigz/2.4
module_python=mugqic/python/2.7.13
module_qualimap=mugqic/qualimap/2.2.1
module_quast=mugqic/Quast/5.0.2
module_R=mugqic/R_Bioconductor/3.6.1_3.10
module_sambamba=mugqic/sambamba/0.7.0
module_samtools=mugqic/samtools/1.12
module_snpeff=mugqic/snpEff/4.5covid19

# Genome
scientific_name=Coronavirinae
common_name=Coronavirus
assembly=SARS-CoV-2
source=NCBI
version=
assembly_synonyms=MN908947.3
assembly_dir=$MUGQIC_INSTALL_HOME/genomes/species/%(scientific_name)s.%(assembly)s
genome_fasta=%(assembly_dir)s/genome/%(scientific_name)s.%(assembly)s.fa
genome_dictionary=%(assembly_dir)s/genome/%(scientific_name)s.%(assembly)s.dict
genome_bwa_index=%(assembly_dir)s/genome/bwa_index/%(scientific_name)s.%(assembly)s.fa
igv_genome=%(genome_fasta)s.fai
snpeff_genome=%(assembly_synonyms)s
known_variants=
amplicon_scheme=ARTIC_v3

java_other_options=-XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304
gatk4_java_options=-XX:+UseParallelGC -XX:ParallelGCThreads=1 -Dsamjdk.buffer_size=4194304 -Dsamjdk.use_async_io_read_samtools=true -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false

[host_reads_removal]
genome_bwa_index = %(assembly_dir)s/genome/bwa_index/Hybrid.%(scientific_name)s.%(assembly)s.Homo_sapiens.GRCh38.fa
cluster_cpu = %(QUART_CPU)s
bwa_other_options = -K 100000000 -v 3 -t %(cluster_cpu)s -Y
sequencing_center = McGill University and Genome Quebec Innovation Centre
sequencing_technology = Illumina
# To remove host reads adapt the regex match: /chr*/
# This one will match any chromosome beginning with chr (for human host)
sambamba_view_other_options = -f bam -F "not (ref_name =~ /chr*/ and mapping_quality >= 0)"
sambamba_sort_other_options =
# For name sorting with sambamba required by fastq conversion
sambamba_name_sort_other_options = -N
sambamba_index_other_options =
# don't append /1 and /2 to the read name with -n
samtools_bam2fq_other_options = -n
samtools_bam2fq_threads = 9
cluster_walltime = 12:00:00
pigz_threads = %(cluster_cpu)s

[kraken_analysis]
kraken2_other_options = --quick
cluster_cpu = %(PINT_CPU)s
kraken2_threads = %(cluster_cpu)s
# To be changed to approptiate location and match with kraken2 module above
kraken2_database=$MUGQIC_INSTALL_HOME/software/kraken2/kraken2-2.1.0/db
pigz_threads = %(cluster_cpu)s
cluster_walltime = 12:00:00

[cutadapt]
adapter_5p_fwd = 
adapter_5p_rev = 
cluster_cpu = %(PINT_CPU)s
threads = %(cluster_cpu)s
options = -e 0.1 -O 9 -m 20 -n 2 --quality-cutoff 33
cluster_walltime = 12:00:00

[mapping_bwa_mem_sambamba]
cluster_cpu = %(QUART_CPU)s
bwa_other_options = -K 100000000 -v 3 -t %(cluster_cpu)s -Y
sequencing_center = McGill University and Genome Quebec Innovation Centre
sequencing_technology = Illumina
sambamba_view_other_options = -S -f bam
sambamba_sort_other_options = 
sambamba_index_other_options = 
cluster_walltime = 12:00:00

[symlink_readset_sample_bam]
cluster_walltime = 00:10:00

[sambamba_merge_sam_files]
cluster_cpu = %(PINT_CPU)s
options = -t %(cluster_cpu)s
cluster_walltime = 06:00:00

[sambamba_filtering]
min_insert_size = 0
max_insert_size = 1000
# removing unmapped, secondary alignments, supplementary alignments and reads mapped with a quality = 0
sambamba_filtering_other_options = -S -f bam -F "not unmapped and not secondary_alignment and not supplementary and mapping_quality > 0 and proper_pair"
cluster_mem = 16G
cluster_walltime = 12:00:00

[fgbio_trim_primers]
cluster_mem = 20G
ram = 20G
primers =
other_options =
cluster_walltime = 48:00:0

[ivar_trim_primers]
bed_primers = %(assembly_dir)s/annotations/%(scientific_name)s.%(assembly)s.%(amplicon_scheme)s_primers.bed
tsv_primer_pair = %(assembly_dir)s/annotations/%(scientific_name)s.%(assembly)s.%(amplicon_scheme)s_primerpair.tsv
other_options = -m 30 -q 20 -s 4 -e
cluster_walltime = 12:00:00
cluster_mem = 16G

[bedtools_genomecov]
other_options = -bga
cluster_walltime = 12:00:00
cluster_mem = 16G

[sambamba_flagstat]
flagstat_options = 
cluster_walltime = --time=12:00:00
cluster_mem = 8G

[picard_collect_multiple_metrics]
cluster_mem = 8G
ram = 8G
max_records_in_ram = 4000000
options = --FILE_EXTENSION ".txt"
cluster_walltime = 12:00:00

[multiple_metrics_raw_picard]
cluster_mem = 8G
ram = 8G
max_records_in_ram = 4000000
options = --FILE_EXTENSION ".txt"
cluster_walltime = 12:00:00

[picard_collect_oxog_metrics]
cluster_mem = 8G
ram = 8G
max_records_in_ram = 4000000
cluster_walltime = 12:00:00

[picard_collect_gcbias_metrics]
cluster_mem = 8G
ram = 8G
max_records_in_ram = 4000000
cluster_walltime = 12:00:00

[dna_sample_qualimap]
cluster_mem = 8G
ram = 8G
use_bed = false
qualimap_options = -ct 2 -gd HUMAN
cluster_walltime = --time=12:00:00

[dna_sambamba_flagstat]
cluster_mem = 8G
flagstat_options =
cluster_walltime = 12:00:00

[picard_calculate_hs_metrics]
baits_intervals=%(assembly_dir)s/annotations/%(scientific_name)s.%(assembly)s.Illumina_ARTIC_primers.interval_list
cluster_mem = 8G
ram = 8G
cluster_walltime = 12:00:00

[picard_bed2interval_list]
cluster_mem = 8G
ram = 8G
max_records_in_ram = 4000000
cluster_walltime = --time=12:00:00

[gatk_depth_of_coverage]
module_gatk = mugqic/GenomeAnalysisTK/3.8
java_other_options = -XX:ParallelGCThreads=2
# maxDepth is RAM limited. maxDepth * 8 * nbIntervals ~= RAM needed
cluster_mem = 8G
ram = 8000M
summary_coverage_thresholds = 10,25,50,75,100,500
cluster_cpu = 2
cluster_walltime = 12:00:00

[bvatools_depth_of_coverage]
# You can set it implicitly, leave blank for whole genome or set auto which uses the sampleSheet to identify the bed file.
coverage_targets=%(assembly_dir)s/annotations/%(scientific_name)s.%(assembly)s.%(amplicon_scheme)s_amplicon.bed
other_options=--gc --maxDepth 1001 --summaryCoverageThresholds 10,25,50,75,100,500,1000 --minMappingQuality 15 --minBaseQuality 15 --ommitN
ram = 8G
cluster_cpu = 2
threads = %(cluster_cpu)s
cluster_walltime = 12:00:00

[igvtools_compute_tdf]
cluster_mem = 8G
ram = 8G
cluster_walltime = --time=12:00:00
option = -f min,max,mean -w 25

[freebayes_call_variants]
# -m Minimum read depth to call variants (Default: 0) -q Minimum quality score threshold to count base (Default: 20) -t Minimum frequency threshold(0 - 1) to call variants. (Default: 0.03)
freebayes_options = -p 1 -F 0.2 -C 1 --pooled-continuous --min-coverage 10 
# A target bed file can be specified with parameter bed_targets
module_python = mugqic/python/3.7.3
# Options for filtering the gvcf: -d mask reference positions with depth less than this threshold; -l Variants with frequency less than -l will be discarded; -u Substitution variants with frequency less than -u will be encoded with IUPAC ambiguity codes
process_gvcf_options = -d 10 -l 0.25 -u 0.75
cluster_walltime = 06:00:00

[ivar_call_variants]
# -m Minimum read depth to call variants (Default: 0) -q Minimum quality score threshold to count base (Default: 20) -t Minimum frequency threshold(0 - 1) to call variants. (Default: 0.03)
other_options = -m 10 -q 20 -t 0.25
# GFF file in the GFF3 format to specify coordinates of open reading frames (ORFs)
gff_orf =
# A target bed file can be specified with option -l file.bed
mpileup_options = -A -d 1000000 -B -Q 0 -l %(assembly_dir)s/annotations/%(scientific_name)s.%(assembly)s.%(amplicon_scheme)s_amplicon.bed --reference %(genome_fasta)s
cluster_walltime = 12:00:00
cluster_mem = 16G

[snpeff_annotate]
cluster_mem = 8G
ram = 8G
cluster_walltime = 06:00:00

[ivar_create_consensus]
# -q Minimum quality score threshold to count base (Default: 20) -t Minimum frequency threshold(0 - 1) to call consensus. (Default: 0) Minimum depth to call consensus(Default: 10)
other_options = -q 20 -t 0.75 -m 10
mpileup_options = -aa -A -d 600000 -Q 0
cluster_walltime = 12:00:00
cluster_mem = 16G

[bcftools_create_consensus]
cluster_walltime = 12:00:00
cluster_mem = 16G

[quast_consensus_metrics]
reference_genome = %(genome_fasta)s
genomic_feature = 
cluster_cpu = %(PINT_CPU)s
threads = %(cluster_cpu)s
cluster_walltime = 02:00:0

[rename_consensus_header]
country = Canada
province = Qc
year = 2022
sequencing_technology = illumina
seq_method = Illumina_NexteraFlex
# assemb_method=ivar
# snv_call_method=ivar
cluster_walltime = 02:00:00

[multiqc]
options = 
cluster_walltime = 02:00:00

[ncovtools_quickalign]
module_python = mugqic/python/3.7.3
cluster_walltime = 04:00:00

[prepare_table]
cluster_walltime = 02:00:00
cluster_dependency_arg = afterany

[prepare_report]
module_R = mugqic/R_Bioconductor/3.5.3_3.8
run_name =
reference_genome = %(genome_fasta)s
primer_prefix = nCoV-2019
amplicon_bed = %(assembly_dir)s/annotations/%(scientific_name)s.%(assembly)s.%(amplicon_scheme)s_amplicon.bed
primer_bed = %(assembly_dir)s/annotations/%(scientific_name)s.%(assembly)s.%(amplicon_scheme)s_primers.bed
# the sequencing platform used, can be "oxford-nanopore" or "illumina"
platform = illumina
sequencing_technology = illumina
cluster_cpu = %(HALF_CPU)s
nb_threads = %(cluster_cpu)s
cluster_walltime = 4:00:00
cluster_dependency_arg = afterany

