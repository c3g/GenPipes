{
    "_meta": {
        "entry_point": "start_command_guide",
        "version": 1.0,
        "description": "Guide to help construct the command to run GenPipes"
    },
    "nodes":[
        {
            "id": "start_command_guide",
            "type": "input",
            "variable": "raw_readset_filename",
            "prompt": "Enter the name of the readset file:", 
            "next": "store_readset_filename"
        },
        {
            "id": "store_readset_filename", 
            "type": "set_variable",
            "variable": "r_command",
            "value": "-r {1_TODO_IN_PYTHON}",
            "next": "slurm_job_scheduler_question"
        },
        {
            "id": "slurm_job_scheduler_question", 
            "type": "confirm",
            "question": "Do you want to use the SLURM job scheduler?",
            "options": [
                {
                    "label": "Yes",
                    "next": "slurm_j_command"
                },
                {
                    "label": "No",
                    "next": "general_job_scheduler_question"
                }
            ]
        },
        {
            "id": "slurm_j_command", 
            "type": "set_variable",
            "variable": "j_command",
            "value": "-j slurm",
            "next": "slurm_server_question"
        },
        {
            "id": "slurm_server_question",
            "type": "selection",
            "question": "Select the SLURM server you want to use:",
            "choices": [
                {"label": "Beluga", "node": "beluga_server_ini"},
                {"label": "Cedar", "node": "cedar_server_ini"},
                {"label": "Narval", "node": "narval_server_ini"}
            ]
        },
        {
            "id": "beluga_server_ini", 
            "type": "set_variable",
            "variable": "scheduler_server_name",
            "value": "beluga",
            "next": "store_server_for_custom_ini"
        },
        {
            "id": "cedar_server_ini", 
            "type": "set_variable",
            "variable": "scheduler_server_name",
            "value": "cedar",
            "next": "store_server_for_custom_ini"
        },
        {
            "id": "narval_server_ini", 
            "type": "set_variable",
            "variable": "scheduler_server_name",
            "value": "narval",
            "next": "store_server_for_custom_ini"
        },
        {
            "id": "general_job_scheduler_question",
            "type": "selection",
            "question": "Which job scheduler do you want to use?",
            "choices": [
                {"label": "Abacus", "node": "abacus_j_command"},
                {"label": "Batch", "node": "batch_j_command"}
            ]
        },
        {
            "id": "abacus_j_command",
            "type": "set_variable",
            "variable": "j_command",
            "value": "-j pbs",
            "next": "custom_ini_question"
        },
        {
            "id": "batch_j_command",
            "type": "set_variable",
            "variable": "j_command",
            "value": "-j batch",
            "next": "batch_server_ini"
        },
        {
            "id": "batch_server_ini",
            "type": "set_variable",
            "variable": "scheduler_server_name",
            "value": "batch",
            "next": "store_name_for_server_ini"
        },
        {
            "id": "store_name_for_server_ini",
            "type": "set_variable",
            "variable": "server_ini",
            "value": "GENPIPES_INIS/common_ini/{scheduler_server_name}.ini",
            "next": "custom_ini_question"
        },
        {
            "id": "custom_ini_question",
            "type": "switch",
            "variable": "pipeline_name",
            "cases": {
                "ampliconseq": {"node": "o_command_question"},
                "chipseq": {"node": "o_command_question"},
                "covseq": {"node": "o_command_question" },
                "dnaseq": {"node": "custom_ini_check_protocol"},
                "longread_dnaseq": {"node": "o_command_question"},
                "methylseq": {"node": "o_command_question"},
                "nanopore_covseq": {"node": "path_custom_ini_question"},
                "rnaseq": {"node": "o_command_question"},
                "rnaseq_denovo_assembly": {"node": "o_command_question"},
                "rnaseq_light": {"node": "o_command_question"}
            }
        },
        {
            "id": "custom_ini_check_protocol",
            "type": "switch",
            "variable": "protocol_name",
            "cases": {
                "germline_snv": {"node": "o_command_question"},
                "germline_sv": {"node": "path_custom_ini_question"},
                "germline_high_cov": {"node": "o_command_question"},
                "somatic_tumor_only": {"node": "o_command_question"},
                "somatic_fastpass": {"node": "path_custom_ini_question"},
                "somatic_ensemble": {"node": "path_custom_ini_question"},
                "somatic_sv": {"node": "path_custom_ini_question"}
            }
        },
        {
            "id": "path_custom_ini_question",
            "type": "input",
            "variable": "raw_path_custom_ini",
            "prompt": "Enter the path to your custom ini:",
            "next": "store_path_custom_ini"
        },
        {
            "id": "store_path_custom_ini",
            "type": "set_variable",
            "variable": "path_custom_ini",
            "value": "2_TODO_IN_PYTHON",
            "next": "o_command_question"
        },
        {
            "id": "o_command_question",
            "type": "confirm",
            "question":"Do you want to run the pipeline somewhere other than your current directory ?",
            "options": [
                {
                    "label": "Yes",
                    "next": "input_directory_name"
                },
                {
                    "label": "No",
                    "next": "pipeline_check_for_file_question"
                }
            ]
        },
        {
            "id": "input_directory_name",
            "type": "input",
            "variable": "directory_name",
            "prompt": "Enter the name of the directory you want to run the pipeline in:", 
            "next": "store_directory_name"
        },
        {
            "id": "store_directory_name",
            "type": "set_variable",
            "variable": "o_command",
            "value": "-o {directory_name}",
            "next": "pipeline_check_for_file_question"
        },
        {
            "id": "pipeline_check_for_file_question",
            "type": "switch",
            "variable": "pipeline_name",
            "cases": {
                "ampliconseq": {"node": "design_file_question"},
                "chipseq": {"node": "design_file_question"},
                "covseq": {"node": "step_question" },
                "dnaseq": {"node": "check_protocol_pair_file"},
                "longread_dnaseq": {"node": "step_question"},
                "methylseq": {"node": "design_file_question"},
                "nanopore_covseq": {"node": "step_question"},
                "rnaseq": {"node": "design_file_question"},
                "rnaseq_denovo_assembly": {"node": "design_file_question"},
                "rnaseq_light": {"node": "design_file_question"}
            }
        },
        {
            "id": "design_file_question",
            "type": "confirm",
            "question": "Do you have a design file?",
            "options": [
                {
                    "label": "Yes",
                    "next": "input_design_file_name"
                },
                {
                    "label": "No",
                    "next": {
                        "external": "step_guide.json",
                        "entryPoint": "start_step_guide"
                    }
                }
            ]
        },
        {
            "id": "input_design_file_name",
            "type": "input",
            "variable": "design_file_name",
            "prompt": "Enter the name of the design file:",
            "next": "store_design_file_name"
        },
        {
            "id": "store_design_file_name",
            "type": "set_variable",
            "variable": "d_command",
            "value": "-d {design_file_name}.{pipeline_name}.txt",
            "next": "step_question"
        },
        {
            "id": "check_protocol_pair_file",
            "type": "switch",
            "variable": "protocol_name",
            "cases": {
                "germline_snv": {"node": "step_question"},
                "germline_sv": {"node": "step_question"},
                "germline_high_cov": {"node": "step_question"},
                "somatic_tumor_only": {"node": "pair_file_question"},
                "somatic_fastpass": {"node": "step_question"},
                "somatic_ensemble": {"node": "step_question"},
                "somatic_sv": {"node": "step_question"}
            }
        },
        {
            "id": "pair_file_question",
            "type": "confirm",
            "question": "Do you have a pair file?",
            "options": [
                {
                    "label": "Yes",
                    "next": "input_pair_file_name"
                },
                {
                    "label": "No",
                    "next": "check_protocol_pair_file"
                }
            ]
        },
        {
            "id": "input_pair_file_name",
            "type": "input",
            "variable": "pair_file_name",
            "prompt": "Enter the name of the pair file:",
            "next": "store_pair_file_name"
        },
        {
            "id": "store_pair_file_name",
            "type": "set_variable",
            "variable": "p_command",
            "value": "-d {pair_file_name}.dnaseq.txt",
            "next": "step_question"
        },
        {
            "id": "step_question",
            "type": "confirm",
            "question": "Do you want to run all the steps of the pipeline?",
            "options": [
                {
                    "label": "Yes",
                    "next": "g_command_question"
                },
                {
                    "label": "No",
                    "next": "input_step_range"
                }
            ]
        },
        {
            "id": "input_step_range",
            "type": "input",
            "variable": "step_range",
            "prompt": "Enter the step range (e.g '1-5', '3,6,7', '2,4-8'): ",
            "next": "store_step_range"
        },
        {
            "id": "store_step_range",
            "type": "set_variable",
            "variable": "s_command",
            "value": "-s {step_range}",
            "next": "g_command_question"
        },
        {
            "id": "g_command_question",
            "type": "input",
            "variable": "g_file_name",
            "prompt": "Enter a file name to save the GenPipes run commands (leave blank to output to stdout):",
            "next": "store_g_file_name"
        },
        {
            "id": "store_g_file_name",
            "type": "set_variable",
            "variable": "g_command",
            "value": "-g {3_TODO_IN_PYTHON}",
            "next": "command_construction"
        },
        {
            "id": "command_construction",
            "type": "set_variable",
            "variable": "final_command",
            "value": "genpipes {pipeline_name} {protocol_name} {c_command} {r_command} {d_command} {p_command} {j_command} {s_command} {o_command} {g_command}"
        }
    ]
}